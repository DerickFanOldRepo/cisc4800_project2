{"ast":null,"code":"var _jsxFileName = \"/Users/derickfan/Desktop/react-heroku/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { CategoryContainer, ListingContainer, UserContainer } from './Container';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); // Sets all the required states\n\n    this.url = process.env.REACT_APP_URL;\n    this.api = {\n      login: async () => {\n        const response = await fetch(`${this.url}/login?username=${this.state.user.username}&password=${this.state.user.password}`);\n        const json = await response.json();\n\n        if (json[\"data\"] != null) {\n          const data = json[\"data\"];\n          this.setState({\n            loggedIn: true\n          });\n          this.setState({\n            user: data\n          });\n          this.setState({\n            error: null\n          });\n        } else {\n          this.setState({\n            error: \"Login Error\"\n          });\n        }\n      },\n      signup: async () => {\n        const response = await fetch(`${this.url}/signup?username=${this.state.newUser.username}&email=${this.state.newUser.email}&password=${this.state.newUser.password}`, {\n          method: 'POST'\n        });\n        const json = await response.json();\n\n        if (json[\"data\"] != null) {\n          const data = json[\"data\"];\n          this.setState({\n            user: data\n          });\n          this.setState({\n            newUser: null\n          });\n          this.setState({\n            loggedIn: true\n          });\n          this.setState({\n            error: null\n          });\n        } else {\n          this.setState({\n            error: \"Signup Error\"\n          });\n        }\n      },\n      addListing: async () => {\n        const response = await fetch(`${this.url}/addListing?username=${this.state.user.username}&itemName=${this.state.newListing.name}&price=${this.state.newListing.price}&quantity=${this.state.newListing.quantity}`, {\n          method: 'POST'\n        });\n        const json = await response.json();\n\n        if (json[\"data\"] != null) {\n          const data = json[\"data\"];\n          this.loadListings();\n          this.setState({\n            newListing: null\n          });\n        } else {\n          this.setState({\n            error: \"Adding Listing Error\"\n          });\n        }\n      },\n      addItem: async () => {\n        const response = await fetch(`${this.url}/addItem?name=${this.state.newItem.name}&categoryName=${this.state.newItem.category}&itemImageUrl=${this.state.newItem.url}`, {\n          method: 'POST'\n        });\n        const json = await response.json();\n        const data = json[\"data\"];\n\n        if (json[\"data\"] != null) {\n          const data = json[\"data\"];\n          this.loadItems();\n          this.setState({\n            newItem: null\n          });\n        } else {\n          this.setState({\n            error: \"Adding Item Error\"\n          });\n        }\n      }\n    };\n\n    this.loadCategories = async () => {\n      const response = await fetch(`${this.url}/getAllCategories`);\n      const json = await response.json();\n      const data = json[\"data\"];\n      this.setState({\n        categories: data\n      });\n    };\n\n    this.loadListings = async () => {\n      const response = await fetch(`${this.url}/getAllListings`);\n      const json = await response.json();\n      const data = json[\"data\"];\n      this.setState({\n        listings: data\n      });\n    };\n\n    this.loadItems = async () => {\n      const response = await fetch(`${this.url}/getAllItems`);\n      const json = await response.json();\n      const data = json[\"data\"];\n      this.setState({\n        items: data\n      });\n    };\n\n    this.login = async () => {\n      const response = await fetch(`${this.url}/getUser?username=${this.state.username}`);\n      const json = await response.json();\n      const data = json[\"data\"];\n      this.setState({\n        user: data\n      });\n    };\n\n    this.modifyNewItem = {\n      updateNewItem: value => {\n        this.setState({\n          newItem: value\n        });\n      },\n      updateValue: (key, value) => {\n        const temp = this.state.newItem;\n        temp[key] = value;\n        this.setState({\n          newItem: temp\n        });\n      },\n      submit: () => {\n        console.log(\"Call add new item api here\");\n      },\n      addItem: () => {\n        this.api.addItem();\n      }\n    };\n    this.modifyNewListing = {\n      updateNewListing: value => {\n        this.setState({\n          newListing: value\n        });\n      },\n      updateValue: (key, value) => {\n        const temp = this.state.newListing;\n        temp[key] = value;\n        this.setState({\n          newListing: temp\n        });\n      },\n      submit: () => {\n        console.log(\"Call add new listing api here\");\n      },\n      addListing: () => {\n        this.api.addListing();\n      }\n    };\n    this.modifyNewUser = {\n      updateNewUser: value => {\n        this.setState({\n          newUser: value\n        });\n      },\n      updateValue: (key, value) => {\n        const temp = this.state.newUser;\n        temp[key] = value;\n        this.setState({\n          newUser: temp\n        });\n      },\n      submit: () => {\n        console.log(\"Call new user api here\");\n      },\n      signup: () => {\n        this.api.signup();\n      }\n    };\n    this.modifyUser = {\n      updateUser: value => {\n        this.setState({\n          user: value\n        });\n      },\n      updateValue: (key, value) => {\n        const temp = this.state.user;\n        temp[key] = value;\n        this.setState({\n          user: temp\n        });\n      },\n      submit: () => {\n        console.log(\"Call login api here\");\n      },\n      login: () => {\n        this.api.login();\n      },\n      logout: () => {\n        this.setState({\n          user: null\n        });\n        this.setState({\n          loggedIn: false\n        });\n      }\n    };\n\n    this.filterListings = async (type, value) => {\n      if (value === \"All\") {\n        await this.loadListings();\n      } else {\n        await this.loadListings();\n        const filter = await this.state.listings.filter(listing => listing[\"category\"] === value);\n        this.setState({\n          listings: filter\n        });\n      }\n    };\n\n    this.state = {\n      categories: null,\n      listings: null,\n      items: null,\n      loggedIn: false,\n      user: null,\n      newUser: null,\n      newItem: null,\n      newListing: null\n    };\n  }\n\n  // This method is called after the components mounts\n  // It will load all the required information \n  componentDidMount() {\n    this.loadCategories();\n    this.loadListings();\n    this.loadItems();\n  } // Renders the App component\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(CategoryContainer, {\n      categories: this.state.categories,\n      filterListings: this.filterListings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(ListingContainer, {\n      listings: this.state.listings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(UserContainer, {\n      user: this.state.user,\n      categories: this.state.categories,\n      items: this.state.items,\n      newUser: this.state.newUser,\n      modifyNewUser: this.modifyNewUser,\n      modifyUser: this.modifyUser,\n      loggedIn: this.state.loggedIn,\n      newListing: this.state.newListing,\n      modifyNewListing: this.modifyNewListing,\n      newItem: this.state.newItem,\n      modifyNewItem: this.modifyNewItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/derickfan/Desktop/react-heroku/src/App.js"],"names":["React","CategoryContainer","ListingContainer","UserContainer","App","Component","constructor","props","url","process","env","REACT_APP_URL","api","login","response","fetch","state","user","username","password","json","data","setState","loggedIn","error","signup","newUser","email","method","addListing","newListing","name","price","quantity","loadListings","addItem","newItem","category","loadItems","loadCategories","categories","listings","items","modifyNewItem","updateNewItem","value","updateValue","key","temp","submit","console","log","modifyNewListing","updateNewListing","modifyNewUser","updateNewUser","modifyUser","updateUser","logout","filterListings","type","filter","listing","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { CategoryContainer, ListingContainer, UserContainer } from './Container'\n\nclass App extends React.Component {\n\n  url = process.env.REACT_APP_URL;\n\n  constructor(props) {\n    super(props);\n\n    // Sets all the required states\n    this.state = {\n      categories: null,\n      listings: null,\n      items: null,\n      loggedIn: false,\n      user: null,\n      newUser: null,\n      newItem: null,\n      newListing: null\n    }\n  }\n\n  api = {\n\n    login: async () => {\n      const response = await fetch(`${this.url}/login?username=${this.state.user.username}&password=${this.state.user.password}`);\n      const json = await response.json();\n      if (json[\"data\"] != null) {\n        const data = json[\"data\"];\n        this.setState({ loggedIn : true });\n        this.setState({ user : data });\n        this.setState({ error : null });\n      } else {\n        this.setState({ error : \"Login Error\" });\n      }\n    },\n\n    signup: async () => {\n      const response = await fetch(`${this.url}/signup?username=${this.state.newUser.username}&email=${this.state.newUser.email}&password=${this.state.newUser.password}`, { method : 'POST' });\n      const json = await response.json();\n      if (json[\"data\"] != null) {\n        const data = json[\"data\"];\n        this.setState({ user : data });\n        this.setState({ newUser : null });\n        this.setState({ loggedIn : true });\n        this.setState({ error : null });\n      } else {\n        this.setState({ error : \"Signup Error\" });\n      }\n    },\n\n    addListing: async () => {\n      const response = await fetch(`${this.url}/addListing?username=${this.state.user.username}&itemName=${this.state.newListing.name}&price=${this.state.newListing.price}&quantity=${this.state.newListing.quantity}`, { method : 'POST' });\n      const json = await response.json();\n      if (json[\"data\"] != null) {\n        const data = json[\"data\"];\n        this.loadListings();\n        this.setState({ newListing : null });\n      } else {\n        this.setState({ error : \"Adding Listing Error\"})\n      }\n    },\n\n    addItem: async () => {\n      const response = await fetch(`${this.url}/addItem?name=${this.state.newItem.name}&categoryName=${this.state.newItem.category}&itemImageUrl=${this.state.newItem.url}`, { method : 'POST' });\n      const json = await response.json();\n      const data = json[\"data\"];\n      if (json[\"data\"] != null) {\n        const data = json[\"data\"];\n        this.loadItems();\n        this.setState({ newItem : null });\n      } else {\n        this.setState({ error : \"Adding Item Error\" });\n      }\n    \n    },\n\n  }\n\n  // Fetches and loads all the categories from the API\n  loadCategories = async () => {\n    const response = await fetch(`${this.url}/getAllCategories`);\n    const json = await response.json();\n    const data = json[\"data\"];\n    this.setState({ categories: data });\n  }\n\n  // Fetches and loads all the listings from the API\n  loadListings = async () => {\n    const response = await fetch(`${this.url}/getAllListings`);\n    const json = await response.json();\n    const data = json[\"data\"];\n    this.setState({ listings: data });\n  }\n\n  // Fetches and loads all the items from the API\n  loadItems = async () => {\n    const response = await fetch(`${this.url}/getAllItems`);\n    const json = await response.json();\n    const data = json[\"data\"];\n    this.setState({ items: data });\n  }\n\n  // Currently gets the User from the API with a username\n  // TODO: implement some sort of authentication system\n  login = async () => {\n    const response = await fetch(`${this.url}/getUser?username=${this.state.username}`);\n    const json = await response.json();\n    const data = json[\"data\"];\n    this.setState({ user: data });\n  }\n\n  // Updates the data for the newItem object to be added to the database\n  modifyNewItem = {\n    updateNewItem: (value) => {\n      this.setState({ newItem: value });\n    },\n\n    updateValue: (key, value) => {\n      const temp = this.state.newItem;\n      temp[key] = value;\n      this.setState({ newItem: temp });\n    },\n\n    submit: () => {\n      console.log(\"Call add new item api here\");\n    },\n\n    addItem: () => {\n      this.api.addItem();\n    }\n\n  }\n\n  // Updates the data for the newListing object to be added to the database\n  modifyNewListing = {\n    updateNewListing: (value) => {\n      this.setState({ newListing: value });\n    },\n\n    updateValue: (key, value) => {\n      const temp = this.state.newListing;\n      temp[key] = value;\n      this.setState({ newListing: temp });\n    },\n\n    submit: () => {\n      console.log(\"Call add new listing api here\");\n    },\n\n    addListing: () => {\n      this.api.addListing();\n    }\n\n  }\n\n  // Updates the data for the newUser object to be added to the database\n  modifyNewUser = {\n\n    updateNewUser: (value) => {\n      this.setState({ newUser: value });\n    },\n\n    updateValue: (key, value) => {\n      const temp = this.state.newUser;\n      temp[key] = value;\n      this.setState({ newUser: temp });\n    },\n\n    submit: () => {\n      console.log(\"Call new user api here\");\n    },\n\n    signup: () => {\n      this.api.signup();\n    }\n\n  }\n\n  // Updates the data for the user object to login\n  modifyUser = {\n\n    updateUser: (value) => {\n      this.setState({ user: value });\n    },\n\n    updateValue: (key, value) => {\n      const temp = this.state.user;\n      temp[key] = value;\n      this.setState({ user: temp });\n    },\n\n    submit: () => {\n      console.log(\"Call login api here\");\n    },\n\n    login: () => {\n      this.api.login();\n    },\n\n    logout: () => {\n      this.setState({ user: null });\n      this.setState({ loggedIn: false });\n    }\n\n  }\n\n  // Filters \n  filterListings = async (type, value) => {\n    if (value === \"All\") {\n      await this.loadListings();\n    } else {\n      await this.loadListings();\n      const filter = await this.state.listings.filter(listing => listing[\"category\"] === value);\n      this.setState({ listings: filter });\n    }\n  }\n\n  // This method is called after the components mounts\n  // It will load all the required information \n  componentDidMount() {\n    this.loadCategories();\n    this.loadListings();\n    this.loadItems();\n  }\n\n  // Renders the App component\n  render() {\n    return <div className=\"container\">\n      <CategoryContainer categories={this.state.categories} filterListings={this.filterListings} />\n      <ListingContainer listings={this.state.listings} />\n      <UserContainer user={this.state.user} categories={this.state.categories} items={this.state.items} newUser={this.state.newUser} modifyNewUser={this.modifyNewUser} modifyUser={this.modifyUser} loggedIn={this.state.loggedIn} newListing={this.state.newListing} modifyNewListing={this.modifyNewListing} newItem={this.state.newItem} modifyNewItem={this.modifyNewItem} />\n    </div>\n  }\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}